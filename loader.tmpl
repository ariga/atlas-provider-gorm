package main

import (
  	"io"
	"fmt"
	"os"

	{{- range .Imports }}
		"{{ . }}"
	{{- end}}
	"ariga.io/atlas-provider-gorm/gormschema"
	_ "ariga.io/atlas-go-sdk/recordriver"
	"gorm.io/gorm"
)

func main() {
    config := constructGormConfig()
	stmts, err := gormschema.New("{{ .Dialect }}", config...).Load(
		{{- range .Models }}
			&{{ .PkgName }}.{{ .Name }}{},
		{{- end }}
	)
	handleError(err, "failed to load gorm schema")

	io.WriteString(os.Stdout, stmts)
}

func handleError(err error, message string) {
	if err != nil {
		fmt.Fprintf(os.Stderr, "%s: %v\n", message, err)
		os.Exit(1)
	}
}

func constructGormConfig() (config []func(*gorm.Config)) {
	if {{ .DisableMigrationForeignKeyConstraint }} {
		config = append(config, gormschema.WithForeignKeyConstraintDisabled())
	}

	return
}
